
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '992F2B395D8BC780E34E9349375FD974'
    
_lr_action_items = {'FORM_END':([10,12,15,16,18,19,20,22,24,25,26,28,30,31,35,37,38,40,41,42,45,47,48,50,51,55,59,60,77,80,81,82,86,87,92,93,94,95,96,98,103,107,108,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,131,132,137,140,141,143,145,146,147,149,150,155,156,159,160,161,162,163,164,169,170,171,174,175,176,182,183,190,],[-42,39,-42,43,-83,-37,49,-72,-42,-40,-87,-78,-14,-42,-41,-42,-79,-42,-80,-82,-74,-42,-42,97,-77,-16,-30,-17,-44,-13,-15,-20,-23,-75,-36,-81,-70,-39,-38,-88,-89,-42,-42,-66,-68,-64,-69,-56,-63,-57,-58,-67,-61,-62,-59,-65,-60,-42,-22,-42,-49,-76,-73,-71,-35,-29,-28,-19,-18,-45,-86,-21,-27,-24,-26,-25,-46,-84,-33,-31,-43,-47,-48,-34,-32,-85,]),'$end':([0,1,2,3,4,6,9,11,13,14,39,43,49,97,],[-42,-5,0,-3,-1,-4,-42,-7,-8,-2,-11,-12,-10,-9,]),'BOOL_NEG':([10,17,21,23,29,32,33,34,36,37,46,47,48,52,53,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,102,105,126,127,129,130,133,134,135,136,138,139,142,168,177,178,179,180,188,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'MINUS':([10,15,17,18,21,22,23,25,26,28,29,32,33,34,36,37,38,40,41,42,45,46,47,48,51,52,53,54,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,87,90,91,93,94,98,99,102,103,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,133,134,135,136,138,139,140,141,142,143,144,147,156,161,162,163,164,168,169,177,178,179,180,181,188,189,190,],[17,-42,17,-83,17,-72,17,69,-87,-78,17,17,17,17,17,17,-79,-42,-80,-82,-74,17,17,17,-77,17,17,69,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,69,-75,69,69,-81,69,-88,69,17,-89,17,69,69,69,69,-56,69,-57,-58,69,-61,69,-59,69,-60,17,17,17,17,17,17,17,17,17,17,-76,-73,17,-71,69,69,-86,69,69,69,69,17,-84,17,17,17,17,69,17,69,-85,]),'ENDPARAM':([15,18,22,26,28,38,40,41,42,45,51,59,60,87,93,94,98,103,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,140,141,143,145,146,147,149,150,151,153,156,169,170,171,173,182,183,190,],[-42,-83,-72,-87,-78,-79,-42,-80,-82,-74,-77,-30,-17,-75,-81,-70,-88,-89,-42,-42,-42,-66,-68,-64,-69,-56,-63,-57,-58,-67,-61,-62,-59,-65,-60,-76,-73,-71,-35,-29,-28,-19,-18,171,-42,-86,-84,-33,-31,183,-34,-32,-85,]),'BOOL_AND':([15,18,22,25,26,28,38,40,41,42,45,51,54,79,87,90,91,93,94,98,99,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,140,141,143,144,147,156,161,162,163,164,169,181,189,190,],[-42,-83,-72,68,-87,-78,-79,-42,-80,-82,-74,-77,68,68,-75,68,68,-81,68,-88,68,-89,-66,-68,-64,-69,-56,-63,-57,-58,-67,-61,-62,-59,-65,-60,-76,-73,-71,68,68,-86,68,68,68,68,-84,68,68,-85,]),'UNTIL':([15,18,19,22,25,26,28,33,35,38,40,41,42,45,47,48,51,77,87,88,93,94,95,96,98,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,137,140,141,143,155,156,164,169,174,175,176,190,],[-42,-83,-37,-72,-40,-87,-78,-42,-41,-79,-42,-80,-82,-74,-42,-42,-77,-44,-75,136,-81,-70,-39,-38,-88,-89,-66,-68,-64,-69,-56,-63,-57,-58,-67,-61,-62,-59,-65,-60,-42,-49,-76,-73,-71,-45,-86,-46,-84,-43,-47,-48,-85,]),'MOD':([15,18,22,25,26,28,38,40,41,42,45,51,54,79,87,90,91,93,94,98,99,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,140,141,143,144,147,156,161,162,163,164,169,181,189,190,],[-42,-83,-72,76,-87,-78,-79,-42,-80,-82,-74,-77,76,76,-75,76,76,-81,76,-88,76,-89,76,76,76,76,76,76,76,-58,76,-61,76,-59,76,-60,-76,-73,-71,76,76,-86,76,76,76,76,-84,76,76,-85,]),'LT':([15,18,22,25,26,28,38,40,41,42,45,51,54,79,87,90,91,93,94,98,99,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,140,141,143,144,147,156,161,162,163,164,169,181,189,190,],[-42,-83,-72,63,-87,-78,-79,-42,-80,-82,-74,-77,63,63,-75,63,63,-81,63,-88,63,-89,-66,-68,-64,-69,-56,63,-57,-58,-67,-61,63,-59,-65,-60,-76,-73,-71,63,63,-86,63,63,63,63,-84,63,63,-85,]),'HEADING':([24,56,106,107,108,109,152,153,],[56,56,56,56,56,56,56,56,]),'ID':([10,15,17,18,21,22,23,24,26,27,28,29,31,32,33,34,36,37,38,40,41,42,45,46,47,48,51,52,53,56,58,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,82,86,87,93,94,98,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,132,133,134,135,136,138,139,140,141,142,143,152,153,156,160,161,162,163,168,169,177,178,179,180,188,190,],[22,-42,22,-83,22,-72,22,57,-87,77,-78,22,83,22,22,22,22,22,-79,-42,-80,-82,-74,22,22,22,-77,22,22,57,106,109,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,83,-23,-75,-81,-70,-88,22,-89,22,57,57,57,57,152,153,-66,-68,-64,-69,-56,-63,-57,-58,-67,-61,-62,-59,-65,-60,22,22,22,22,83,22,22,22,22,22,22,-76,-73,22,-71,57,57,-86,-27,-24,-26,-25,22,-84,22,22,22,22,22,-85,]),'LPAREN':([10,17,21,22,23,27,29,32,33,34,36,37,44,46,47,48,52,53,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,102,105,126,127,129,130,133,134,135,136,138,139,142,146,160,168,177,178,179,180,188,],[23,23,23,52,23,78,23,23,23,23,23,23,78,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,78,78,23,23,23,23,23,23,]),'RPAREN':([15,18,22,26,28,38,40,41,42,45,51,52,54,87,93,94,98,99,100,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,128,140,141,143,144,156,167,169,189,190,],[-42,-83,-72,-87,-78,-79,-42,-80,-82,-74,-77,98,103,-75,-81,-70,-88,-90,141,-89,-66,-68,-64,-69,-56,-63,-57,-58,-67,-61,-62,-59,-65,-60,156,-76,-73,-71,169,-86,-91,-84,190,-85,]),'SECT_SET':([10,15,18,19,20,22,24,25,26,28,30,31,35,37,38,40,41,42,45,47,48,51,55,59,60,77,81,82,86,87,92,93,94,95,96,98,103,107,108,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,131,132,137,140,141,143,145,146,147,149,150,155,156,159,160,161,162,163,164,169,170,171,174,175,176,182,183,190,],[24,-42,-83,-37,24,-72,-42,-40,-87,-78,24,-42,-41,-42,-79,-42,-80,-82,-74,-42,-42,-77,-16,-30,-17,-44,-15,-20,-23,-75,-36,-81,-70,-39,-38,-88,-89,-42,-42,-66,-68,-64,-69,-56,-63,-57,-58,-67,-61,-62,-59,-65,-60,-42,-22,-42,-49,-76,-73,-71,-35,-29,-28,-19,-18,-45,-86,-21,-27,-24,-26,-25,-46,-84,-33,-31,-43,-47,-48,-34,-32,-85,]),'NEWLINE':([3,5,7,8,10,11,13,15,18,19,22,24,25,26,28,31,33,35,37,38,39,40,41,42,43,45,47,48,49,51,56,59,60,77,79,82,86,87,90,93,94,97,98,103,106,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,130,132,137,138,139,140,141,143,145,146,147,152,153,155,156,160,161,162,163,164,169,170,171,174,175,176,177,179,182,183,190,],[9,-6,10,10,-42,-7,-8,-42,-83,48,-72,-42,-40,-87,-78,-42,-42,-41,-42,-79,-11,-42,-80,-82,-12,-74,-42,-42,-10,-77,-42,-30,108,-44,129,132,-23,-75,138,-81,-70,-9,-88,-89,-42,-42,-42,-42,-66,-68,-64,-69,-56,-63,-57,-58,-67,-61,-62,-59,-65,-60,-42,-42,-42,-42,-49,-42,-42,-76,-73,-71,-35,-29,-28,-42,-42,-45,-86,-27,-24,-26,-25,-46,-84,-33,-31,-43,-47,-48,-42,-42,-34,-32,-85,]),'TIMES':([15,18,22,25,26,28,38,40,41,42,45,51,54,79,87,90,91,93,94,98,99,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,140,141,143,144,147,156,161,162,163,164,169,181,189,190,],[-42,-83,-72,70,-87,-78,-79,-42,-80,-82,-74,-77,70,70,-75,70,70,-81,70,-88,70,-89,70,70,70,70,70,70,70,-58,70,-61,70,-59,70,-60,-76,-73,-71,70,70,-86,70,70,70,70,-84,70,70,-85,]),'PARAM':([24,56,62,106,107,108,109,152,153,],[61,61,111,61,61,61,61,61,61,]),'STRING':([10,15,17,21,23,29,32,33,34,36,37,40,46,47,48,52,53,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,102,105,126,127,129,130,133,134,135,136,138,139,142,168,177,178,179,180,188,],[15,40,15,15,15,15,15,15,15,15,15,40,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'ENDWHILE':([15,18,19,22,25,26,28,35,38,40,41,42,45,47,48,51,77,87,93,94,95,96,98,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,130,137,140,141,143,155,156,157,158,164,169,174,175,176,190,],[-42,-83,-37,-72,-40,-87,-78,-41,-79,-42,-80,-82,-74,-42,-42,-77,-44,-75,-81,-70,-39,-38,-88,-89,-66,-68,-64,-69,-56,-63,-57,-58,-67,-61,-62,-59,-65,-60,-42,-42,-42,-49,-76,-73,-71,-45,-86,175,176,-46,-84,-43,-47,-48,-85,]),'GT':([15,18,22,25,26,28,38,40,41,42,45,51,54,79,87,90,91,93,94,98,99,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,140,141,143,144,147,156,161,162,163,164,169,181,189,190,],[-42,-83,-72,64,-87,-78,-79,-42,-80,-82,-74,-77,64,64,-75,64,64,-81,64,-88,64,-89,-66,-68,-64,-69,-56,64,-57,-58,-67,-61,64,-59,-65,-60,-76,-73,-71,64,64,-86,64,64,64,64,-84,64,64,-85,]),'FUNC':([24,56,62,106,107,108,109,152,153,],[58,58,110,58,58,58,58,58,58,]),'MAG':([10,15,17,18,21,22,23,26,28,29,32,33,34,36,37,38,40,41,42,45,46,47,48,51,52,53,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,87,91,93,94,98,102,103,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,133,134,135,136,138,139,140,141,142,143,156,168,169,177,178,179,180,188,190,],[36,-42,36,-83,36,-72,36,-87,-78,36,36,36,36,36,36,-79,-42,-80,-82,-74,36,36,36,-77,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-75,140,-81,-70,-88,36,-89,36,-66,-68,-64,-69,-56,-63,-57,-58,-67,-61,-62,-59,-65,-60,36,36,36,36,36,36,36,36,36,36,-76,-73,36,-71,-86,36,-84,36,36,36,36,36,-85,]),'EQ':([15,18,22,25,26,28,38,40,41,42,45,51,54,79,87,90,91,93,94,98,99,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,140,141,143,144,147,156,161,162,163,164,169,181,189,190,],[-42,-83,-72,65,-87,-78,-79,-42,-80,-82,-74,-77,65,65,-75,65,65,-81,65,-88,65,-89,-66,-68,-64,-69,-56,65,-57,-58,-67,-61,65,-59,-65,-60,-76,-73,-71,65,65,-86,65,65,65,65,-84,65,65,-85,]),'NUMBER':([10,17,21,23,29,32,33,34,36,37,46,47,48,52,53,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,102,105,126,127,129,130,133,134,135,136,138,139,142,168,177,178,179,180,188,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'WHILE':([10,33,37,47,48,127,129,130,138,139,177,179,],[29,29,29,29,29,29,29,29,29,29,29,29,]),'GTE':([15,18,22,25,26,28,38,40,41,42,45,51,54,79,87,90,91,93,94,98,99,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,140,141,143,144,147,156,161,162,163,164,169,181,189,190,],[-42,-83,-72,66,-87,-78,-79,-42,-80,-82,-74,-77,66,66,-75,66,66,-81,66,-88,66,-89,-66,-68,-64,-69,-56,66,-57,-58,-67,-61,66,-59,-65,-60,-76,-73,-71,66,66,-86,66,66,66,66,-84,66,66,-85,]),'PLUS':([10,15,17,18,21,22,23,25,26,28,29,32,33,34,36,37,38,40,41,42,45,46,47,48,51,52,53,54,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,87,90,91,93,94,98,99,102,103,105,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,133,134,135,136,138,139,140,141,142,143,144,147,156,161,162,163,164,168,169,177,178,179,180,181,188,189,190,],[32,-42,32,-83,32,-72,32,67,-87,-78,32,32,32,32,32,32,-79,-42,-80,-82,-74,32,32,32,-77,32,32,67,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,67,-75,67,67,-81,67,-88,67,32,-89,32,67,67,67,67,-56,67,-57,-58,67,-61,67,-59,67,-60,32,32,32,32,32,32,32,32,32,32,-76,-73,32,-71,67,67,-86,67,67,67,67,32,-84,32,32,32,32,67,32,67,-85,]),'SECT_PARMS':([10,15,18,19,20,22,24,25,26,28,30,31,35,37,38,40,41,42,45,47,48,51,55,59,60,77,81,82,86,87,92,93,94,95,96,98,103,107,108,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,131,132,137,140,141,143,145,146,147,149,150,155,156,159,160,161,162,163,164,169,170,171,174,175,176,182,183,190,],[31,-42,-83,-37,31,-72,-42,-40,-87,-78,31,-42,-41,-42,-79,-42,-80,-82,-74,-42,-42,-77,-16,-30,-17,-44,-15,-20,-23,-75,-36,-81,-70,-39,-38,-88,-89,-42,-42,-66,-68,-64,-69,-56,-63,-57,-58,-67,-61,-62,-59,-65,-60,-42,-22,-42,-49,-76,-73,-71,-35,-29,-28,-19,-18,-45,-86,-21,-27,-24,-26,-25,-46,-84,-33,-31,-43,-47,-48,-34,-32,-85,]),'COMMA':([10,15,18,19,22,24,25,26,28,33,35,37,38,40,41,42,45,47,48,51,54,56,59,60,77,79,87,90,93,94,98,99,100,101,103,106,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,137,138,139,140,141,143,144,145,146,147,152,153,154,155,156,164,167,169,170,171,174,175,176,177,179,181,182,183,190,],[-42,-42,-83,47,-72,-42,-40,-87,-78,-42,-41,-42,-79,-42,-80,-82,-74,-42,-42,-77,102,-42,-30,107,-44,130,-75,139,-81,-70,-88,-90,142,142,-89,-42,-42,-42,-42,-66,-68,-64,-69,-56,-63,-57,-58,-67,-61,-62,-59,-65,-60,-42,142,-42,-42,-49,-42,-42,-76,-73,-71,168,-35,-29,-28,-42,-42,142,-45,-86,-46,-91,-84,-33,-31,-43,-47,-48,-42,-42,188,-34,-32,-85,]),'CONST':([10,17,21,23,29,32,33,34,36,37,46,47,48,52,53,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,102,105,126,127,129,130,133,134,135,136,138,139,142,168,177,178,179,180,188,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'ENDHEADING':([15,18,22,26,28,38,40,41,42,45,51,56,59,60,87,93,94,98,103,104,107,108,112,113,114,115,116,117,118,119,120,121,122,123,124,125,140,141,143,145,146,147,149,150,156,169,170,171,182,183,190,],[-42,-83,-72,-87,-78,-79,-42,-80,-82,-74,-77,-42,-30,-17,-75,-81,-70,-88,-89,145,-42,-42,-66,-68,-64,-69,-56,-63,-57,-58,-67,-61,-62,-59,-65,-60,-76,-73,-71,-35,-29,-28,-19,-18,-86,-84,-33,-31,-34,-32,-85,]),'BOOL_OR':([15,18,22,25,26,28,38,40,41,42,45,51,54,79,87,90,91,93,94,98,99,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,140,141,143,144,147,156,161,162,163,164,169,181,189,190,],[-42,-83,-72,73,-87,-78,-79,-42,-80,-82,-74,-77,73,73,-75,73,73,-81,73,-88,73,-89,-66,-68,-64,-69,-56,-63,-57,-58,-67,-61,-62,-59,-65,-60,-76,-73,-71,73,73,-86,73,73,73,73,-84,73,73,-85,]),'COMPLEX':([10,17,21,23,29,32,33,34,36,37,46,47,48,52,53,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,102,105,126,127,129,130,133,134,135,136,138,139,142,168,177,178,179,180,188,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'FORM_ID':([0,1,9,],[5,5,5,]),'ELSEIF':([15,18,19,22,25,26,28,35,38,40,41,42,45,47,48,51,77,87,93,94,95,96,98,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,137,138,139,140,141,143,155,156,164,165,166,169,174,175,176,190,],[-42,-83,-37,-72,-40,-87,-78,-41,-79,-42,-80,-82,-74,-42,-42,-77,-44,-75,-81,-70,-39,-38,-88,-89,-66,-68,-64,-69,-56,-63,-57,-58,-67,-61,-62,-59,-65,-60,-42,-49,-42,-42,-76,-73,-71,-45,-86,-46,178,180,-84,-43,-47,-48,-85,]),'TYPE':([10,15,17,18,21,22,23,24,26,28,29,31,32,33,34,36,37,38,40,41,42,45,46,47,48,51,52,53,56,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,82,86,87,93,94,98,102,103,105,106,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,132,133,134,135,136,138,139,140,141,142,143,152,153,156,160,161,162,163,168,169,177,178,179,180,188,190,],[27,-42,44,-83,44,-72,44,62,-87,-78,44,85,44,27,44,44,27,-79,-42,-80,-82,-74,44,27,27,-77,44,44,62,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,85,-23,-75,-81,-70,-88,44,-89,146,62,62,62,62,-66,-68,-64,-69,-56,-63,-57,-58,-67,-61,-62,-59,-65,-60,44,27,27,27,85,160,44,44,44,27,27,-76,-73,44,-71,62,62,-86,-27,-24,-26,-25,44,-84,27,44,27,44,44,-85,]),'error':([0,5,7,8,9,],[1,-6,12,12,1,]),'ENDFUNC':([15,18,22,26,28,38,40,41,42,45,51,59,60,87,93,94,98,103,106,107,108,112,113,114,115,116,117,118,119,120,121,122,123,124,125,140,141,143,145,146,147,148,149,150,152,156,169,170,171,172,182,183,190,],[-42,-83,-72,-87,-78,-79,-42,-80,-82,-74,-77,-30,-17,-75,-81,-70,-88,-89,-42,-42,-42,-66,-68,-64,-69,-56,-63,-57,-58,-67,-61,-62,-59,-65,-60,-76,-73,-71,-35,-29,-28,170,-19,-18,-42,-86,-84,-33,-31,182,-34,-32,-85,]),'IF':([10,33,37,47,48,127,129,130,138,139,177,179,],[34,34,34,34,34,34,34,34,34,34,34,34,]),'ENDIF':([15,18,19,22,25,26,28,35,38,40,41,42,45,47,48,51,77,87,89,93,94,95,96,98,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,137,138,139,140,141,143,155,156,164,165,166,169,174,175,176,177,179,184,185,186,187,190,],[-42,-83,-37,-72,-40,-87,-78,-41,-79,-42,-80,-82,-74,-42,-42,-77,-44,-75,137,-81,-70,-39,-38,-88,-89,-66,-68,-64,-69,-56,-63,-57,-58,-67,-61,-62,-59,-65,-60,-42,-49,-42,-42,-76,-73,-71,-45,-86,-46,-50,-51,-84,-43,-47,-48,-42,-42,-52,-54,-53,-55,-85,]),'ASSIGN':([18,22,57,77,83,84,85,141,143,],[46,-72,105,127,133,134,135,-73,-71,]),'RARRAY':([15,18,22,26,28,38,40,41,42,45,51,87,93,94,98,99,101,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,140,141,143,154,156,167,169,190,],[-42,-83,-72,-87,-78,-79,-42,-80,-82,-74,-77,-75,-81,-70,-88,-90,143,-89,-66,-68,-64,-69,-56,-63,-57,-58,-67,-61,-62,-59,-65,-60,-76,-73,-71,174,-86,-91,-84,-85,]),'DIVIDE':([15,18,22,25,26,28,38,40,41,42,45,51,54,79,87,90,91,93,94,98,99,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,140,141,143,144,147,156,161,162,163,164,169,181,189,190,],[-42,-83,-72,74,-87,-78,-79,-42,-80,-82,-74,-77,74,74,-75,74,74,-81,74,-88,74,-89,74,74,74,74,74,74,74,-58,74,-61,74,-59,74,-60,-76,-73,-71,74,74,-86,74,74,74,74,-84,74,74,-85,]),'ELSE':([15,18,19,22,25,26,28,35,38,40,41,42,45,47,48,51,77,87,93,94,95,96,98,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,137,138,139,140,141,143,155,156,164,165,166,169,174,175,176,190,],[-42,-83,-37,-72,-40,-87,-78,-41,-79,-42,-80,-82,-74,-42,-42,-77,-44,-75,-81,-70,-39,-38,-88,-89,-66,-68,-64,-69,-56,-63,-57,-58,-67,-61,-62,-59,-65,-60,-42,-49,-42,-42,-76,-73,-71,-45,-86,-46,177,179,-84,-43,-47,-48,-85,]),'LTE':([15,18,22,25,26,28,38,40,41,42,45,51,54,79,87,90,91,93,94,98,99,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,140,141,143,144,147,156,161,162,163,164,169,181,189,190,],[-42,-83,-72,71,-87,-78,-79,-42,-80,-82,-74,-77,71,71,-75,71,71,-81,71,-88,71,-89,-66,-68,-64,-69,-56,71,-57,-58,-67,-61,71,-59,-65,-60,-76,-73,-71,71,71,-86,71,71,71,71,-84,71,71,-85,]),'POWER':([15,18,22,25,26,28,38,40,41,42,45,51,54,79,87,90,91,93,94,98,99,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,140,141,143,144,147,156,161,162,163,164,169,181,189,190,],[-42,-83,-72,72,-87,-78,-79,-42,-80,-82,72,72,72,72,72,72,72,-81,72,-88,72,-89,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-76,-73,-71,72,72,-86,72,72,72,72,-84,72,72,-85,]),'LARRAY':([22,77,],[53,126,]),'NEQ':([15,18,22,25,26,28,38,40,41,42,45,51,54,79,87,90,91,93,94,98,99,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,140,141,143,144,147,156,161,162,163,164,169,181,189,190,],[-42,-83,-72,75,-87,-78,-79,-42,-80,-82,-74,-77,75,75,-75,75,75,-81,75,-88,75,-89,-66,-68,-64,-69,-56,75,-57,-58,-67,-61,75,-59,-65,-60,-76,-73,-71,75,75,-86,75,75,75,75,-84,75,75,-85,]),'SECT_STM':([10,15,18,19,20,22,24,25,26,28,30,31,35,37,38,40,41,42,45,47,48,51,55,59,60,77,81,82,86,87,92,93,94,95,96,98,103,107,108,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,131,132,137,140,141,143,145,146,147,149,150,155,156,159,160,161,162,163,164,169,170,171,174,175,176,182,183,190,],[37,-42,-83,-37,37,-72,-42,-40,-87,-78,37,-42,-41,-42,-79,-42,-80,-82,-74,-42,-42,-77,-16,-30,-17,-44,-15,-20,-23,-75,-36,-81,-70,-39,-38,-88,-89,-42,-42,-66,-68,-64,-69,-56,-63,-57,-58,-67,-61,-62,-59,-65,-60,-42,-22,-42,-49,-76,-73,-71,-35,-29,-28,-19,-18,-45,-86,-21,-27,-24,-26,-25,-46,-84,-33,-31,-43,-47,-48,-34,-32,-85,]),'REPEAT':([10,15,18,22,26,28,31,33,37,38,40,41,42,45,47,48,51,82,86,87,93,94,98,103,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,130,132,138,139,140,141,143,156,160,161,162,163,169,177,179,190,],[33,-42,-83,-72,-87,-78,84,33,33,-79,-42,-80,-82,-74,33,33,-77,84,-23,-75,-81,-70,-88,-89,-66,-68,-64,-69,-56,-63,-57,-58,-67,-61,-62,-59,-65,-60,33,33,33,84,33,33,-76,-73,-71,-86,-27,-24,-26,-25,-84,33,33,-85,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'setlist':([24,56,106,107,108,109,152,153,],[55,104,148,149,150,151,172,173,]),'ifbody':([34,178,180,],[89,185,187,]),'formid':([0,1,9,],[7,8,7,]),'parmlist':([31,82,132,],[81,131,159,]),'arglist':([52,53,78,126,142,],[100,101,128,154,167,]),'lval':([10,17,21,23,29,32,33,34,36,37,46,47,48,52,53,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,102,105,126,127,129,130,133,134,135,136,138,139,142,168,177,178,179,180,188,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'empty':([0,9,10,15,24,31,33,37,40,47,48,56,82,106,107,108,109,127,129,130,132,138,139,152,153,177,179,],[6,6,35,42,59,86,35,35,42,35,35,59,86,59,59,59,59,35,35,35,86,35,35,59,59,35,35,]),'section':([10,20,30,],[30,30,30,]),'sectlist':([10,20,30,],[16,50,80,]),'parm':([31,82,132,],[82,82,82,]),'exp':([10,17,21,23,29,32,33,34,36,37,46,47,48,52,53,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,102,105,126,127,129,130,133,134,135,136,138,139,142,168,177,178,179,180,188,],[25,45,51,54,79,87,25,90,91,25,94,25,25,99,99,112,113,114,115,116,117,118,119,120,121,122,123,124,125,99,144,147,99,25,25,25,161,162,163,164,25,25,99,181,25,90,25,90,189,]),'stringlist':([15,40,],[41,93,]),'formbody':([7,8,],[11,13,]),'file':([0,],[2,]),'set':([24,56,106,107,108,109,152,153,],[60,60,60,60,60,60,60,60,]),'formula':([0,9,],[3,3,]),'formlist':([0,9,],[4,14,]),'stm':([10,33,37,47,48,127,129,130,138,139,177,179,],[19,19,19,19,19,155,19,19,19,19,19,19,]),'stmlist':([10,33,37,47,48,129,130,138,139,177,179,],[20,88,92,95,96,157,158,165,166,184,186,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file","S'",1,None,None,None),
  ('file -> formlist','file',1,'p_file','fractparser.py',28),
  ('formlist -> formula NEWLINE formlist','formlist',3,'p_formlist','fractparser.py',33),
  ('formlist -> formula','formlist',1,'p_formlist_singleform','fractparser.py',38),
  ('formlist -> empty','formlist',1,'p_formlist_empty','fractparser.py',43),
  ('formlist -> error','formlist',1,'p_formlist_empty','fractparser.py',44),
  ('formid -> FORM_ID','formid',1,'p_formid','fractparser.py',49),
  ('formula -> formid formbody','formula',2,'p_formula','fractparser.py',55),
  ('formula -> error formid formbody','formula',3,'p_formula_err','fractparser.py',61),
  ('formbody -> NEWLINE stmlist sectlist FORM_END','formbody',4,'p_formbody_2','fractparser.py',66),
  ('formbody -> NEWLINE stmlist FORM_END','formbody',3,'p_formbody_3','fractparser.py',71),
  ('formbody -> error FORM_END','formbody',2,'p_formbody_err','fractparser.py',76),
  ('formbody -> NEWLINE sectlist FORM_END','formbody',3,'p_formbody_sectlist','fractparser.py',81),
  ('sectlist -> section sectlist','sectlist',2,'p_sectlist_2','fractparser.py',86),
  ('sectlist -> section','sectlist',1,'p_sectlist_section','fractparser.py',91),
  ('section -> SECT_PARMS parmlist','section',2,'p_section_parm','fractparser.py',96),
  ('section -> SECT_SET setlist','section',2,'p_section_set','fractparser.py',101),
  ('setlist -> set','setlist',1,'p_setlist_set','fractparser.py',106),
  ('setlist -> set NEWLINE setlist','setlist',3,'p_setlist_2','fractparser.py',111),
  ('setlist -> set COMMA setlist','setlist',3,'p_setlist_2','fractparser.py',112),
  ('parmlist -> parm','parmlist',1,'p_parmlist_parm','fractparser.py',117),
  ('parmlist -> parm NEWLINE parmlist','parmlist',3,'p_parmlist_2','fractparser.py',122),
  ('parmlist -> parm parmlist','parmlist',2,'p_parmlist_3','fractparser.py',127),
  ('parm -> empty','parm',1,'p_parm_empty','fractparser.py',132),
  ('parm -> ID ASSIGN exp','parm',3,'p_parm_exp','fractparser.py',139),
  ('parm -> TYPE ASSIGN exp','parm',3,'p_parm_exp','fractparser.py',140),
  ('parm -> REPEAT ASSIGN exp','parm',3,'p_parm_exp','fractparser.py',141),
  ('parm -> ID ASSIGN TYPE','parm',3,'p_parm_type','fractparser.py',146),
  ('set -> ID ASSIGN exp','set',3,'p_set_exp','fractparser.py',151),
  ('set -> ID ASSIGN TYPE','set',3,'p_set_type','fractparser.py',156),
  ('set -> empty','set',1,'p_set_empty','fractparser.py',161),
  ('set -> PARAM ID setlist ENDPARAM','set',4,'p_set_param','fractparser.py',166),
  ('set -> TYPE PARAM ID setlist ENDPARAM','set',5,'p_set_typed_param','fractparser.py',171),
  ('set -> FUNC ID setlist ENDFUNC','set',4,'p_set_func','fractparser.py',176),
  ('set -> TYPE FUNC ID setlist ENDFUNC','set',5,'p_set_typed_func','fractparser.py',181),
  ('set -> HEADING setlist ENDHEADING','set',3,'p_set_heading','fractparser.py',186),
  ('section -> SECT_STM stmlist','section',2,'p_section_stm_2','fractparser.py',191),
  ('stmlist -> stm','stmlist',1,'p_stmlist_stm','fractparser.py',203),
  ('stmlist -> stm NEWLINE stmlist','stmlist',3,'p_stmlist_2','fractparser.py',208),
  ('stmlist -> stm COMMA stmlist','stmlist',3,'p_stmlist_2','fractparser.py',209),
  ('stm -> exp','stm',1,'p_stm_exp','fractparser.py',214),
  ('stm -> empty','stm',1,'p_stm_empty','fractparser.py',219),
  ('empty -> <empty>','empty',0,'p_empty','fractparser.py',224),
  ('stm -> TYPE ID LARRAY arglist RARRAY','stm',5,'p_stm_decl_array','fractparser.py',229),
  ('stm -> TYPE ID','stm',2,'p_stm_decl','fractparser.py',234),
  ('stm -> TYPE ID ASSIGN stm','stm',4,'p_stm_assign','fractparser.py',239),
  ('stm -> REPEAT stmlist UNTIL exp','stm',4,'p_stm_repeat','fractparser.py',244),
  ('stm -> WHILE exp NEWLINE stmlist ENDWHILE','stm',5,'p_stm_while','fractparser.py',249),
  ('stm -> WHILE exp COMMA stmlist ENDWHILE','stm',5,'p_stm_while','fractparser.py',250),
  ('stm -> IF ifbody ENDIF','stm',3,'p_stm_if','fractparser.py',255),
  ('ifbody -> exp NEWLINE stmlist','ifbody',3,'p_ifbody','fractparser.py',260),
  ('ifbody -> exp COMMA stmlist','ifbody',3,'p_ifbody','fractparser.py',261),
  ('ifbody -> exp NEWLINE stmlist ELSE stmlist','ifbody',5,'p_ifbody_else','fractparser.py',266),
  ('ifbody -> exp COMMA stmlist ELSE stmlist','ifbody',5,'p_ifbody_else','fractparser.py',267),
  ('ifbody -> exp NEWLINE stmlist ELSEIF ifbody','ifbody',5,'p_ifbody_elseif','fractparser.py',272),
  ('ifbody -> exp COMMA stmlist ELSEIF ifbody','ifbody',5,'p_ifbody_elseif','fractparser.py',273),
  ('exp -> exp PLUS exp','exp',3,'p_exp_binop','fractparser.py',278),
  ('exp -> exp MINUS exp','exp',3,'p_exp_binop','fractparser.py',279),
  ('exp -> exp TIMES exp','exp',3,'p_exp_binop','fractparser.py',280),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp_binop','fractparser.py',281),
  ('exp -> exp MOD exp','exp',3,'p_exp_binop','fractparser.py',282),
  ('exp -> exp POWER exp','exp',3,'p_exp_binop','fractparser.py',283),
  ('exp -> exp BOOL_OR exp','exp',3,'p_exp_binop','fractparser.py',284),
  ('exp -> exp BOOL_AND exp','exp',3,'p_exp_binop','fractparser.py',285),
  ('exp -> exp EQ exp','exp',3,'p_exp_binop','fractparser.py',286),
  ('exp -> exp NEQ exp','exp',3,'p_exp_binop','fractparser.py',287),
  ('exp -> exp LT exp','exp',3,'p_exp_binop','fractparser.py',288),
  ('exp -> exp LTE exp','exp',3,'p_exp_binop','fractparser.py',289),
  ('exp -> exp GT exp','exp',3,'p_exp_binop','fractparser.py',290),
  ('exp -> exp GTE exp','exp',3,'p_exp_binop','fractparser.py',291),
  ('exp -> lval ASSIGN exp','exp',3,'p_exp_assign','fractparser.py',297),
  ('lval -> ID LARRAY arglist RARRAY','lval',4,'p_lval_id_array','fractparser.py',302),
  ('lval -> ID','lval',1,'p_lval_id','fractparser.py',307),
  ('lval -> ID LPAREN arglist RPAREN','lval',4,'p_lval_funcall','fractparser.py',312),
  ('exp -> MINUS exp','exp',2,'p_exp_uminus','fractparser.py',317),
  ('exp -> PLUS exp','exp',2,'p_exp_uplus','fractparser.py',324),
  ('exp -> MAG exp MAG','exp',3,'p_exp_mag','fractparser.py',329),
  ('exp -> BOOL_NEG exp','exp',2,'p_exp_neg','fractparser.py',334),
  ('exp -> NUMBER','exp',1,'p_exp_num','fractparser.py',339),
  ('exp -> CONST','exp',1,'p_exp_boolconst','fractparser.py',344),
  ('exp -> STRING stringlist','exp',2,'p_exp_string','fractparser.py',349),
  ('stringlist -> STRING stringlist','stringlist',2,'p_stringlist_string','fractparser.py',354),
  ('stringlist -> empty','stringlist',1,'p_stringlist_empty','fractparser.py',359),
  ('exp -> lval','exp',1,'p_exp_lval','fractparser.py',364),
  ('exp -> LPAREN exp COMMA exp RPAREN','exp',5,'p_exp_complex','fractparser.py',369),
  ('exp -> LPAREN exp COMMA exp COMMA exp COMMA exp RPAREN','exp',9,'p_exp_hyper','fractparser.py',374),
  ('exp -> TYPE LPAREN arglist RPAREN','exp',4,'p_exp_ctor','fractparser.py',379),
  ('exp -> COMPLEX','exp',1,'p_exp_complex_i','fractparser.py',384),
  ('exp -> ID LPAREN RPAREN','exp',3,'p_exp_funcall_noargs','fractparser.py',393),
  ('exp -> LPAREN exp RPAREN','exp',3,'p_exp_parexp','fractparser.py',398),
  ('arglist -> exp','arglist',1,'p_arglist_exp','fractparser.py',403),
  ('arglist -> arglist COMMA arglist','arglist',3,'p_arglist_2','fractparser.py',408),
]
