name: Test Gnofract 4D

on:
  pull_request:
    types: [opened, reopened, ready_for_review, synchronize]
  push:
    branches: ["master"]

jobs:
  run:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        python: ["3.8", "3.9", "3.10", "3.11"]
        toxenv: [py]
        # Ensure ../codecov.yml uploads after all py jobs
        include:
          - os: macos-11
            python: "3.7"
            toxenv: py
          - os: ubuntu-18.04
            python: "3.6"
            toxenv: py
          - os: ubuntu-latest
            python: "3.8"
            toxenv: pylint

    env:
      # For labelling Codecov report
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python }}

    steps:
      - uses: actions/checkout@v3
      - name: Install macOS packages
        if: ${{ runner.os == 'macOS' }}
        run: brew install gtk+3 pygobject3
        # Prevent delay caused by:
        # `brew cleanup` has not been run in 30 days, running now...
        env:
          HOMEBREW_NO_INSTALL_CLEANUP: 1
      - name: Install Ubuntu packages
        if: ${{ runner.os == 'Linux' }}
        # libgirepository1.0-dev required to build PyGObject from source
        # gvfs is needed for Gio.AppInfo.launch_default_for_uri()
        # libxml2-utils provides xmllint for xml-stripblanks in gresource.xml
        run: sudo apt install gir1.2-gtk-3.0 gvfs libgirepository1.0-dev libxml2-utils xvfb
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Install Tox and any other PyPI packages
        run: pip install tox
      - name: Build
        run: python setup.py build
      - name: Run Tox (macOS)
        if: ${{ runner.os == 'macOS' }}
        run: tox -e ${{ matrix.toxenv }}
      - name: Run Tox (Linux)
        if: ${{ runner.os == 'Linux' }}
        run: xvfb-run --auto-servernum tox -e ${{ matrix.toxenv }}
      - name: Upload coverage to Codecov
        if: ${{ matrix.toxenv == 'py' }}
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          env_vars: OS,PYTHON
